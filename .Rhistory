bwplot(results, main = "Model Accuracy Estimates: Control Group One VS. Experimental Group - Transformed Variables")
# Dot-plot comparison
#dotplot(results)
modellist <- c("lda", "glm", "svm", "knn", "nb", "cart", "c50", "treebag", "rf", "gbm", "adabag")
leng <- 1:length(modellist)
txt <- NULL
txt2 <- NULL
j <- 1
for (i in modellist) {
modelnumber <- leng[j]
library("ROCR")
### CONSTRUCTING ROC AUC PLOT:
# Get the posteriors as a dataframe.
predictions <-predict(object = eval(parse(text=paste("fit_", i, "_control_one_trans", sep=""))), testing[,predictors], type = "prob")
predictions.posteriors <- as.data.frame(predictions)
# Evaluate the model
pred <- prediction(predictions.posteriors[,2], testing[,3])
roc.perf = performance(pred, measure = "tpr", x.measure = "fpr")
auc.train <- performance(pred, measure = "auc")
auc.train <- auc.train@y.values
# Plot
par(mar=c(5.1, 4.1, 4.1, 13), xpd=TRUE)
if(modelnumber == 1) {
plot(roc.perf, col = j, main = "ROC Curve: Control Group One VS. Experimental - Transformed Variables", cex.lab = 1.5, cex.main = 1.5)
#abline(a=0, b= 1)
#text(x = .25, y = .65 ,paste("AUC = ", round(auc.train[[1]],3), sep = ""))
} else{
plot(roc.perf, col = j, add = TRUE, main = "ROC Curve: Control Group One VS. Experimental - Transformed Variables", cex.lab = 1.5, cex.main = 1.5)
#abline(a=0, b= 1)
}
txt[j] <- paste(i, " AUC = ", round(auc.train[[1]],3), sep = "")
txt2[j] <- round(auc.train[[1]],3)
j <- j+1
}
legend("bottomright", txt, inset=c(-.35,0), lty = 1, col = c(1:11), cex = 1.1, xpd=TRUE )
results_one_trans <- results
auc_one_trans <- txt2
set.seed(9999)
library(haven)
library(klaR)
#Infant gender model construction
ibq <- ibq_impute
ibq$group <- as.factor(ibq$group)
ibq$group <- revalue(ibq$group, c("0"="experimental", "1"="control_one", "2"="control_two"))
ibq <- ibq[ibq$group != "control_one",]
ibq$group <- factor(ibq$group)
ibq$group <- relevel(ibq$group, "control_two")
#ibq <- subset(ibq, AgeGrp == "three")
# ibq$infantgender <- as.factor(ibq$infantgender)
# levels(ibq$infantgender) <- c('male', 'female')
set.seed(103)
inTraining <- createDataPartition(ibq$group, p = .7, list = FALSE)
training <- ibq[ inTraining,]
testing  <- ibq[-inTraining,]
fmla <- as.formula(paste("group ~ ", paste(colnames(ibq[c(45:47)]), collapse= "+")))
predictors <- colnames(ibq[c(45:47)])
train_control<- trainControl(method="repeatedcv", savePredictions = "final", classProbs = T, returnResamp='all')
cl <- makePSOCKcluster(10)
registerDoParallel(cl)
fit_rf_control_two_trans <- caret::train(fmla, data=training, method="rf", trControl = train_control, importance = TRUE)
fit_lda_control_two_trans <- caret::train(fmla, data=training, method="lda", trControl = train_control)
fit_glm_control_two_trans <- caret::train(fmla, data=training, method="glm", trControl = train_control)
fit_knn_control_two_trans <- caret::train(fmla, data=training, method="knn",trControl = train_control)
fit_nb_control_two_trans <- caret::train(fmla, data=training, method="nb", trControl = train_control)
fit_svm_control_two_trans <- caret::train(fmla, data=training, method="svmRadial", trControl = train_control)
fit_cart_control_two_trans <- caret::train(fmla, data=training, method="rpart", trControl = train_control)
fit_c50_control_two_trans <- caret::train(fmla, data=training, method="C5.0", trControl = train_control)
fit_treebag_control_two_trans <- caret::train(fmla, data=training, method="treebag", trControl = train_control)
fit_gbm_control_two_trans <- caret::train(fmla, data=training, method="gbm", trControl = train_control, verbose = FALSE)
fit_adabag_control_two_trans <- caret::train(fmla, data=training, method="AdaBag", trControl = train_control)
## When you are done:
stopCluster(cl)
#infant gender model results
results <- resamples(list(lda=fit_lda_control_two_trans, glm=fit_glm_control_two_trans, svm=fit_svm_control_two_trans, knn=fit_knn_control_two_trans, nb=fit_nb_control_two_trans, cart=fit_cart_control_two_trans, c50=fit_c50_control_two_trans,treebag=fit_treebag_control_two_trans, rf=fit_rf_control_two_trans, gbm=fit_gbm_control_two_trans, adabag=fit_adabag_control_two_trans))
# Table comparison
#summary(results)
# boxplot comparison
bwplot(results, main = "Model Accuracy Estimates: Control Group Two VS. Experimental Group - Transformed Variables")
# Dot-plot comparison
#dotplot(results)
modellist <- c("lda", "glm", "svm", "knn", "nb", "cart", "c50", "treebag", "rf", "gbm", "adabag")
leng <- 1:length(modellist)
txt <- NULL
txt2 <- NULL
j <- 1
for (i in modellist) {
modelnumber <- leng[j]
library("ROCR")
### CONSTRUCTING ROC AUC PLOT:
# Get the posteriors as a dataframe.
predictions <-predict(object = eval(parse(text=paste("fit_", i, "_control_two_trans", sep=""))), testing[,predictors], type = "prob")
predictions.posteriors <- as.data.frame(predictions)
# Evaluate the model
pred <- prediction(predictions.posteriors[,2], testing[,3])
roc.perf = performance(pred, measure = "tpr", x.measure = "fpr")
auc.train <- performance(pred, measure = "auc")
auc.train <- auc.train@y.values
# Plot
par(mar=c(5.1, 4.1, 4.1, 13), xpd=TRUE)
if(modelnumber == 1) {
plot(roc.perf, col = j, main = "ROC Curve: Control Group Two VS. Experimental - Transformed Variables", cex.lab = 1.5, cex.main = 1.5)
#abline(a=0, b= 1)
#text(x = .25, y = .65 ,paste("AUC = ", round(auc.train[[1]],3), sep = ""))
} else{
plot(roc.perf, col = j, add = TRUE, main = "ROC Curve: Control Group Two VS. Experimental - Transformed Variables", cex.lab = 1.5, cex.main = 1.5)
#abline(a=0, b= 1)
}
txt[j] <- paste(i, " AUC = ", round(auc.train[[1]],3), sep = "")
txt2[j] <- round(auc.train[[1]],3)
j <- j+1
}
legend("bottomright", txt, inset=c(-.35,0), lty = 1, col = c(1:11), cex = 1.1, xpd=TRUE )
results_two_trans <- results
auc_two_trans <- txt2
importance
importance(fit_rf_control_one_trans)
?importance
randomForest::importance(fit_rf_control_one_trans)
varImp(fit_rf_control_one_trans)
varImp(fit_rf_control_one_trans, scale=FALSE)
?varImp
rfe(fit_rf_control_one_trans)
?rfe
training
fmls
fmla
rfe(group, c(sur,na,ec), data=training)
?rfe
colnames(traaining)
colnames(training)
rfe(training$group, training[c(45:47)])
rfe(training[c(45:47)], training$group)
training[c(45:47)]
logBBB
bbbDescr
test <- data(BloodBrain)
test
data(BloodBrain)
BloodBrain
bbbDescr
x <- scale(bbbDescr[,-nearZeroVar(bbbDescr)])
x <- x[, -findCorrelation(cor(x), .8)]
x <- as.data.frame(x, stringsAsFactors = TRUE)
x
class(x)
class(training[c(45:47)])
rfe(training[c(45:47)], training$group, sizes = c(1,2,3), rfeControl = rfeControl(functions = rfFuncs))
logBBB
training$group
unique(training$group)
rfe(training[c(45:47)], training$group, sizes = c(1,2), rfeControl = rfeControl(functions = rfFuncs))
class(training[c(45:47)])
str(training[c(45:47)])
x <- as.data.frame(training[c(45:47)], stringsAsFactors = TRUE)
x
class(x)
str(x)
y <- training$group
rfe(x,y)
xtest <- x
ytest <- y
rfe(xtest,ytest)
rfe(x=xtest, y=ytest)
rfe(x=xtest, y=ytest, rfeControl = functions = rfFuncs)
rfe(x=xtest, y=ytest, rfeControl(functions = rfFuncs))
rfe(xtest, ytest, rfeControl(functions = rfFuncs))
xtest
ytest
rfe(xtest, ytest, rfeControl(functions = rfFuncs), method = "svmRadial")
control <- rfeControl(functions = rfFuncs, # random forest
method = "repeatedcv", # repeated cv
repeats = 5, # number of repeats
number = 10) # number of folds
rfe(xtest, ytest, rfeControl = control)
rfe(x = xtest, y = ytest, rfeControl = control)
xtest
ytest
rfe(x = xtest, y = as.data.frame(ytest), rfeControl = control)
nrow(ytest)
ytest
rfe(x = xtest, y = data.frame(ytest), rfeControl = control)
data.frame(ytest)
nrow(data.frame(ytest))
nrow(xtest)
rfe(x = xtest, y = data.frame(ytest), rfeControl = control)
class(xtest)
class(ytest)
ytest2 <- data.frame(ytest)
class(ytest2)
rfe(x = xtest, y = ytest2, rfeControl = control)
cbind(xtest, ytest2)
rfe(x = xtest, y = ytest2)
View(training)
knitr::opts_chunk$set(echo = TRUE, fig.width=15, fig.height=8.5)
knitr::opts_knit$set(root.dir = "/mnt/ceph/erichs/git/IBQ_R_2022/", warning = FALSE, message = FALSE)  # with something else than `getwd()`
library(dplyr)
library(lubridate)
library(tidyr)
library(data.table)
library(caret)
library(doParallel)
library(plyr)
library(mice)
library(VIM)
#ibq <- read.csv("./data/IBQ-R VSF Preterm 91022.csv")
set.seed(999)
ibq <- read.csv("./data/IBQ-R VSF Preterms Sept23.csv")
ibq[ibq == -99999] <- NA
ibq[ibq == 100] <- NA
#ibq[8:45] <- lapply(ibq[8:45], factor)  ## as.factor() could also be used
#ibq_mice <- md.pattern(ibq[8:45])
#aggr_plot <- aggr(ibq[8:45], col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(ibq[8:45]), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
tempData <- mice(ibq[8:44],m=5,maxit=5,meth='pmm',seed=500)
ibq_impute <- complete(tempData,5)
ibq_impute <- cbind(ibq[1:7], ibq_impute, ibq[46:48])
ibq_impute$na <- rowMeans(ibq_impute[c(10,11,16,17,23,24,29,30,35,36,39,40)])
ibq_impute$sur <- rowMeans(ibq_impute[c(8,9,14,15,20,21,22,27,28,33,34,43,44)])
ibq_impute$ec <- rowMeans(ibq_impute[c(12,13,18,19,25,26,31,32,37,38,41,42)])
set.seed(9999)
library(haven)
library(klaR)
#Infant gender model construction
ibq <- ibq_impute
ibq$group <- as.factor(ibq$group)
ibq$group <- revalue(ibq$group, c("0"="experimental", "1"="control_one", "2"="control_two"))
ibq <- ibq[ibq$group != "control_two",]
ibq$group <- factor(ibq$group)
ibq$group <- relevel(ibq$group, "control_one")
#ibq <- subset(ibq, AgeGrp == "three")
# ibq$infantgender <- as.factor(ibq$infantgender)
# levels(ibq$infantgender) <- c('male', 'female')
set.seed(103)
inTraining <- createDataPartition(ibq$group, p = .7, list = FALSE)
training <- ibq[ inTraining,]
testing  <- ibq[-inTraining,]
fmla <- as.formula(paste("group ~ ", paste(colnames(ibq[c(8:44)]), collapse= "+")))
predictors <- colnames(ibq[c(8:44)])
train_control<- trainControl(method="repeatedcv", savePredictions = "final", classProbs = T, returnResamp='all')
View(training)
view(ibq)
View(ibq)
View(ibq_impute)
knitr::opts_chunk$set(echo = TRUE, fig.width=15, fig.height=8.5)
knitr::opts_knit$set(root.dir = "/mnt/ceph/erichs/git/IBQ_R_2022/", warning = FALSE, message = FALSE)  # with something else than `getwd()`
library(dplyr)
library(lubridate)
library(tidyr)
library(data.table)
library(caret)
library(doParallel)
library(plyr)
library(mice)
library(VIM)
#ibq <- read.csv("./data/IBQ-R VSF Preterm 91022.csv")
set.seed(999)
ibq <- read.csv("./data/IBQ-R VSF Preterms Sept23.csv")
ibq[ibq == -99999] <- NA
ibq[ibq == 100] <- NA
View(ibq)
library(readr)
IBQ_R_VSF_Preterms_Sept23 <- read_csv("data/IBQ-R VSF Preterms Sept23.csv")
View(IBQ_R_VSF_Preterms_Sept23)
fit_rf_control_one_all
fit_rf_control_one_all$finalModel$importance
varImpPlot(fit_rf_control_one_all)
varImp(fit_glm_control_one_all)
varImp(fit_glm_control_one_all, scale = FALSE)
varImp(fit_rf_control_one_all, scale = FALSE)
varImp(fit_treebag_control_one_all, scale = FALSE)
varImp(fit_treebag_control_one_trans, scale = FALSE)
varImp(fit_treebag_control_two_trans, scale = FALSE)
varImp(fit_treebag_control_two_all, scale = FALSE)
varImp(fit_rf_control_one_all,scale = TRUE)[["importance"]]
v <- varImp(fit_rf_control_one_all,scale = TRUE)[["importance"]]
v$Overall <- v$Overall / sum(v$Overall)
v$Overall <- v$control_one / sum(v$control_one)
v$Overall
plot(v$Overall)
plot(sort(v$Overall))
v <- varImp(fit_rf_control_one_trans,scale = TRUE)[["importance"]]
v$Overall <- v$control_one / sum(v$control_one)
plot(sort(v$Overall))
#remove scale = FALSE to address negatives
# p1 <- varImp(fit_rf_control_one_trans, scale = FALSE)$importance
# p1$name <- rownames(p1)
# p2 <- varImp(fit_rf_control_two_trans, scale = FALSE)$importance
# p2$name <- rownames(p2)
p1 <- varImp(fit_rf_control_one_trans,scale = TRUE)[["importance"]]
p1$name <- rownames(p1)
p2 <- varImp(fit_rf_control_two_trans,scale = TRUE)[["importance"]]
p1$name <- rownames(p2)
p1$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p1name <- gsub("^.*?_","",p1$name)
# p1name <- gsub("^.*?_","",p1name)
p1$category <- p1$name
#
p2$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p2name <- gsub("^.*?_","",p2$name)
# p2name <- gsub("^.*?_","",p2name)
p2$category <- p1$name
# p1 <- p1[order(-p1$experimental),]
# p2 <- p2[order(-p2$experimental),]
p1$name <- factor(p1$name, levels = p1$name[order(p1$experimental)])
p2$name <- factor(p2$name, levels = p2$name[order(p2$experimental)])
# p1a <- ggplot(p1) + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
# p2a <- ggplot(p2) + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
p1a <- ggplot(p1[1:3,], aes(x=experimental, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p2a <- ggplot(p2[1:3,], aes(x=experimental, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p1 <- varImp(fit_rf_control_one_trans,scale = TRUE)[["importance"]]
p1
p1$Overall <- p1$control_one / sum(p1$control_one)
p1$name <- rownames(p1)
p1
p1$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p1name <- gsub("^.*?_","",p1$name)
# p1name <- gsub("^.*?_","",p1name)
p1$category <- p1$name
#
p2$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p2name <- gsub("^.*?_","",p2$name)
# p2name <- gsub("^.*?_","",p2name)
p2$category <- p1$name
p1$name <- factor(p1$name, levels = p1$name[order(p1$experimental)])
p2$name <- factor(p2$name, levels = p2$name[order(p2$experimental)])
#remove scale = FALSE to address negatives
# p1 <- varImp(fit_rf_control_one_trans, scale = FALSE)$importance
# p1$name <- rownames(p1)
# p2 <- varImp(fit_rf_control_two_trans, scale = FALSE)$importance
# p2$name <- rownames(p2)
p1 <- varImp(fit_rf_control_one_trans,scale = TRUE)[["importance"]]
p1$Overall <- p1$control_one / sum(p1$control_one)
p1$name <- rownames(p1)
p2 <- varImp(fit_rf_control_two_trans,scale = TRUE)[["importance"]]
p2$Overall <- p2$control_two / sum(p2$control_two)
p1$name <- rownames(p2)
p1$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p1name <- gsub("^.*?_","",p1$name)
# p1name <- gsub("^.*?_","",p1name)
p1$category <- p1$name
#
p2$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p2name <- gsub("^.*?_","",p2$name)
# p2name <- gsub("^.*?_","",p2name)
p2$category <- p1$name
# p1 <- p1[order(-p1$experimental),]
# p2 <- p2[order(-p2$experimental),]
p1$name <- factor(p1$name, levels = p1$name[order(p1$experimental)])
p2$name <- factor(p2$name, levels = p2$name[order(p2$experimental)])
# p1a <- ggplot(p1) + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
# p2a <- ggplot(p2) + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
p1a <- ggplot(p1[1:3,], aes(x=experimental, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p2a <- ggplot(p2[1:3,], aes(x=experimental, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p1a
p2a
p2a
p1
p2
p1a <- ggplot(p1[1:3,], aes(x=Overall, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p2a <- ggplot(p2[1:3,], aes(x=Overall, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p1a
p2a
p1a
p1
p2
#remove scale = FALSE to address negatives
# p1 <- varImp(fit_rf_control_one_trans, scale = FALSE)$importance
# p1$name <- rownames(p1)
# p2 <- varImp(fit_rf_control_two_trans, scale = FALSE)$importance
# p2$name <- rownames(p2)
p1 <- varImp(fit_rf_control_one_trans,scale = TRUE)[["importance"]]
p1$Overall <- p1$control_one / sum(p1$control_one)
p1$name <- rownames(p1)
p2 <- varImp(fit_rf_control_two_trans,scale = TRUE)[["importance"]]
p2$Overall <- p2$control_two / sum(p2$control_two)
p1$name <- rownames(p2)
p1$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p1name <- gsub("^.*?_","",p1$name)
# p1name <- gsub("^.*?_","",p1name)
p1$category <- p1$name
#
p2$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p2name <- gsub("^.*?_","",p2$name)
# p2name <- gsub("^.*?_","",p2name)
p2$category <- p1$name
# p1 <- p1[order(-p1$experimental),]
# p2 <- p2[order(-p2$experimental),]
p1$name <- factor(p1$name, levels = p1$name[order(p1$experimental)])
p2$name <- factor(p2$name, levels = p2$name[order(p2$experimental)])
# p1a <- ggplot(p1) + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
# p2a <- ggplot(p2) + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
p1[3] <- 1.0
p2[3] <- 1.0
p1a <- ggplot(p1[1:3,], aes(x=Overall, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p2a <- ggplot(p2[1:3,], aes(x=Overall, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p1a
p1[1,3]
p1
p1 <- varImp(fit_rf_control_one_trans,scale = TRUE)[["importance"]]
p1$Overall <- p1$control_one / sum(p1$control_one)
p1$name <- rownames(p1)
p2 <- varImp(fit_rf_control_two_trans,scale = TRUE)[["importance"]]
p2$Overall <- p2$control_two / sum(p2$control_two)
p1$name <- rownames(p2)
p1$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p1name <- gsub("^.*?_","",p1$name)
# p1name <- gsub("^.*?_","",p1name)
p1$category <- p1$name
#
p2$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p2name <- gsub("^.*?_","",p2$name)
# p2name <- gsub("^.*?_","",p2name)
p2$category <- p1$name
# p1 <- p1[order(-p1$experimental),]
# p2 <- p2[order(-p2$experimental),]
p1$name <- factor(p1$name, levels = p1$name[order(p1$experimental)])
p2$name <- factor(p2$name, levels = p2$name[order(p2$experimental)])
p1
p1[1,3]
p1[3,3]
#remove scale = FALSE to address negatives
# p1 <- varImp(fit_rf_control_one_trans, scale = FALSE)$importance
# p1$name <- rownames(p1)
# p2 <- varImp(fit_rf_control_two_trans, scale = FALSE)$importance
# p2$name <- rownames(p2)
p1 <- varImp(fit_rf_control_one_trans,scale = TRUE)[["importance"]]
p1$Overall <- p1$control_one / sum(p1$control_one)
p1$name <- rownames(p1)
p2 <- varImp(fit_rf_control_two_trans,scale = TRUE)[["importance"]]
p2$Overall <- p2$control_two / sum(p2$control_two)
p1$name <- rownames(p2)
p1$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p1name <- gsub("^.*?_","",p1$name)
# p1name <- gsub("^.*?_","",p1name)
p1$category <- p1$name
#
p2$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p2name <- gsub("^.*?_","",p2$name)
# p2name <- gsub("^.*?_","",p2name)
p2$category <- p1$name
# p1 <- p1[order(-p1$experimental),]
# p2 <- p2[order(-p2$experimental),]
p1$name <- factor(p1$name, levels = p1$name[order(p1$experimental)])
p2$name <- factor(p2$name, levels = p2$name[order(p2$experimental)])
# p1a <- ggplot(p1) + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
# p2a <- ggplot(p2) + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
p1[3,3] <- 1.0
p2[3,3] <- 1.0
p1a <- ggplot(p1[1:3,], aes(x=Overall, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p2a <- ggplot(p2[1:3,], aes(x=Overall, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p1a
#remove scale = FALSE to address negatives
# p1 <- varImp(fit_rf_control_one_trans, scale = FALSE)$importance
# p1$name <- rownames(p1)
# p2 <- varImp(fit_rf_control_two_trans, scale = FALSE)$importance
# p2$name <- rownames(p2)
p1 <- varImp(fit_rf_control_one_trans,scale = TRUE)[["importance"]]
p1$Overall <- p1$control_one / sum(p1$control_one)
p1$name <- rownames(p1)
p2 <- varImp(fit_rf_control_two_trans,scale = TRUE)[["importance"]]
p2$Overall <- p2$control_two / sum(p2$control_two)
p1$name <- rownames(p2)
p1$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p1name <- gsub("^.*?_","",p1$name)
# p1name <- gsub("^.*?_","",p1name)
p1$category <- p1$name
#
p2$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p2name <- gsub("^.*?_","",p2$name)
# p2name <- gsub("^.*?_","",p2name)
p2$category <- p1$name
# p1 <- p1[order(-p1$experimental),]
# p2 <- p2[order(-p2$experimental),]
p1$name <- factor(p1$name, levels = p1$name[order(p1$experimental)])
p2$name <- factor(p2$name, levels = p2$name[order(p2$experimental)])
# p1a <- ggplot(p1) + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
# p2a <- ggplot(p2) + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
p1[3,3] <- .01
p2[3,3] <- .01
p1a <- ggplot(p1[1:3,], aes(x=Overall, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p2a <- ggplot(p2[1:3,], aes(x=Overall, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p1a
p2a
#remove scale = FALSE to address negatives
# p1 <- varImp(fit_rf_control_one_trans, scale = FALSE)$importance
# p1$name <- rownames(p1)
# p2 <- varImp(fit_rf_control_two_trans, scale = FALSE)$importance
# p2$name <- rownames(p2)
p1 <- varImp(fit_rf_control_one_trans,scale = TRUE)[["importance"]]
p1$Overall <- p1$control_one / sum(p1$control_one)
p1$name <- rownames(p1)
p2 <- varImp(fit_rf_control_two_trans,scale = TRUE)[["importance"]]
p2$Overall <- p2$control_two / sum(p2$control_two)
p1$name <- rownames(p2)
p1$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p1name <- gsub("^.*?_","",p1$name)
# p1name <- gsub("^.*?_","",p1name)
p1$category <- p1$name
#
p2$name <- c("surgency/positive affectivity", "distress/negative affectivity", "regulation/effortful control")
# p2name <- gsub("^.*?_","",p2$name)
# p2name <- gsub("^.*?_","",p2name)
p2$category <- p1$name
# p1 <- p1[order(-p1$experimental),]
# p2 <- p2[order(-p2$experimental),]
p1$name <- factor(p1$name, levels = p1$name[order(p1$experimental)])
p2$name <- factor(p2$name, levels = p2$name[order(p2$experimental)])
# p1a <- ggplot(p1) + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
# p2a <- ggplot(p2) + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17)
p1[3,3] <- .01
p2[3,3] <- .006
p1a <- ggplot(p1[1:3,], aes(x=Overall, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control One vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
p2a <- ggplot(p2[1:3,], aes(x=Overall, y=name, fill=category)) + geom_bar(aes(y=name), stat="identity") + ggtitle("Random Forest Control Two vs. Experimental", subtitle = "Transformed Variables")   + theme_classic(base_size = 17) + xlab("Importance %") + ylab("Category")
